{"version":3,"sources":["Pages/Home.jsx","App.js","Globalcss.js","index.js"],"names":["Wrapper","styled","section","Maxcontainer","div","Home","useState","chosenEmoji","setChosenEmoji","update","setupdate","changeupdate","setchangeupdate","className","emoji","onEmojiClick","event","emojiObject","onChange","e","target","value","type","onClick","preventDefault","map","item","index","App","to","Globalcss","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAIMA,EAAUC,IAAOC,QAAV,0GAKPC,EAAeF,IAAOG,IAAV,+5CAqHHC,EAxDF,WACX,MAAsCC,mBAAS,MAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAwCJ,mBAAS,MAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KAYA,OACE,cAACZ,EAAD,UACE,eAACG,EAAD,WACE,+CACA,iCACGI,EACC,uBAAMM,UAAU,cAAhB,mBAAqCN,EAAYO,SAEjD,sBAAMD,UAAU,cAAhB,6BAEF,cAAC,IAAD,CAAQE,aArBK,SAACC,EAAOC,GAC3BT,EAAeS,SAsBX,iCACE,yCACA,uBAAOC,SAlBY,SAACC,GAC1BP,EAAgBO,EAAEC,OAAOC,QAiBkBC,KAAK,OAAOT,UAAU,WAC3D,wBAAQU,QAvBK,SAACJ,GACpBA,EAAEK,iBACFd,EAAU,GAAD,mBAAKD,GAAL,CAAaE,MAqBeE,UAAU,YAAzC,oBAIF,iCACE,2CACA,uBAAOS,KAAK,OAAOT,UAAU,WAC7B,wBAAQA,UAAU,YAAlB,oBAEF,sBAAKA,UAAU,OAAf,kBACQN,GAAeA,EAAYO,MACjC,uBAFF,UAGUL,EAAOgB,KAAI,SAACC,EAAKC,GACvB,OACE,qCACE,+BAAmBD,GAARC,GACX,sCCnGDC,I,EAAAA,EAVf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,GAAG,IAAV,SACE,cAAC,EAAD,SCuBOC,EA/BGC,YAAH,4wB,QCIfC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,SAGJC,SAASC,eAAe,W","file":"static/js/main.8eed1cbc.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport styled from 'styled-components'\nimport Picker from 'emoji-picker-react';\n\nconst Wrapper = styled.section`\n  width: 100vw;\n  height: 100vh;\n  background-color: var(--Primary-color);\n`;\nconst Maxcontainer = styled.div`\n  max-width: 1300px;\n  height: 100vh;\n  margin: 0 auto;\n  background-color: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 2rem;\n  h1 {\n    font-size: var(--Header-Medium);\n    text-transform: capitalize;\n    letter-spacing: 0.2rem;\n    margin: 1rem 0;\n    color: var(--default-black);\n  }\n  form {\n    margin: 2rem;\n    display: flex;\n    align-items: center;\n    width: 800px;\n    justify-content: space-between;\n    .Emojiupdate {\n      font-size: var(--Subtitle-regular);\n      text-transform: uppercase;\n      font-weight: bold;\n    }\n    h3 {\n      font-size: var(--Subtitle-regular);\n      text-transform: uppercase;\n    }\n    .update {\n      width: 500px;\n      height: 30px;\n      border: none;\n      border-bottom: 1px solid black;\n      font-size: var(--Subtitle-regular);\n      margin: 0 1rem;\n    }\n    .addupdate {\n      width: 130px;\n      height: 30px;\n      outline: none;\n      border: none;\n      border-radius: 2rem;\n      background-color: var(--Primary-color-light);\n      font-size: var(--Subtitle-regular);\n      text-transform: capitalize;\n      padding: 2rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      cursor: pointer;\n      transition: all 0.3s ease-in-out;\n      :hover {\n        background-color: var(--Seconday-color-light);\n      }\n    }\n  }\n`;\n\nconst Home = () => {\n  const [chosenEmoji, setChosenEmoji] = useState(null);\n  const [update, setupdate] = useState([])\n  const [changeupdate, setchangeupdate] = useState(null)\n  const onEmojiClick = (event, emojiObject) => {\n    setChosenEmoji(emojiObject);\n  };\n  const handlechange = (e)=>{\n    e.preventDefault()\n    setupdate([...update, changeupdate ])\n  }\n  const handleupdatechange = (e)=>{\n    setchangeupdate(e.target.value)\n  }\n\n  return (\n    <Wrapper>\n      <Maxcontainer>\n        <h1>Add Your Plan</h1>\n        <form>\n          {chosenEmoji ? (\n            <span className=\"Emojiupdate\">Mood: {chosenEmoji.emoji}</span>\n          ) : (\n            <span className=\"Emojiupdate\">No emoji Chosen</span>\n          )}\n          <Picker onEmojiClick={onEmojiClick} />\n        </form>\n        <form>\n          <h3>Update:</h3>\n          <input onChange={handleupdatechange} type=\"text\" className=\"update\" />\n          <button onClick={handlechange} className=\"addupdate\">\n            add\n          </button>\n        </form>\n        <form>\n          <h3>Blockers:</h3>\n          <input type=\"text\" className=\"update\" />\n          <button className=\"addupdate\">add</button>\n        </form>\n        <div className=\"data\">\n          Mood:{chosenEmoji && chosenEmoji.emoji}\n          <br />\n          Update:{update.map((item,index)=>{\n            return (\n              <>\n                <span key={index}>{item}</span>\n                <br />\n              </>\n            );\n          })}\n        </div>\n      </Maxcontainer>\n    </Wrapper>\n  );\n}\n\nexport default Home\n","import react from \"react\";\nimport {Switch,Route} from 'react-router-dom'\nimport Home from \"./Pages/Home\";\n\n\n\n\nfunction App() {\n  return (\n    <Switch>\n      <Route to='/'>\n        <Home/>\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from \"styled-components\";\n\n\nconst Globalcss = createGlobalStyle`\n  :root{\n      --Primary-color: #2EC5CE;\n      --Primary-color-regular: #75E3EA;\n      --Primary-color-light: #D5FAFC;\n      --default-black:#0B0D17;\n      --Seconday-color:#F22BB2;\n      --Seconday-color-light:#FF72D2;\n      --Black-900:#18191F;\n      --Black-800:#474A57;\n      --Black-700:#969BAB;\n      --Black-300:#D9DBE1;\n      --Header-big:7.2rem;\n      --Header-Medium:4.8rem;\n      --Header-Small:4rem;\n      --Header-VerySmall:2.8rem;\n      --Subtitle-regular:1.8rem;\n      --body-regualr:1.6rem;\n      --body-small:1.4rem;\n  }\n *,html,body{\n    font-size: 10px;\n    font-family: 'Roboto', sans-serif;\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    list-style: none;\n    text-decoration: none;\n  }\n`;\n\nexport default Globalcss","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport Globalcss from './Globalcss'\nimport {HashRouter as Router} from 'react-router-dom'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Globalcss />\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}